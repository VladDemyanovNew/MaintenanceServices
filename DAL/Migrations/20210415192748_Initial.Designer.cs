// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using VDemyanov.MaintenanceServices.DAL.Context;

namespace VDemyanov.MaintenanceServices.DAL.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    [Migration("20210415192748_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:Collation", "Cyrillic_General_CI_AS")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.5")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("VDemyanov.MaintenanceServices.Domain.Models.MainServiceEntities.Contract", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Category")
                        .HasColumnType("int")
                        .HasColumnName("CATEGORY");

                    b.Property<string>("ClientName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("CLIENT_NAME");

                    b.Property<DateTime?>("CreationDate")
                        .HasColumnType("date")
                        .HasColumnName("CREATION_DATE");

                    b.Property<string>("FacilityAddress")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("FACILITY_ADDRESS");

                    b.Property<string>("Name")
                        .HasMaxLength(20)
                        .HasColumnType("nchar(20)")
                        .HasColumnName("NAME")
                        .IsFixedLength(true);

                    b.HasKey("Id");

                    b.HasIndex("Category");

                    b.HasIndex(new[] { "Name" }, "UQ__CONTRACT__D9C1FA00F1D7EC60")
                        .IsUnique()
                        .HasFilter("[NAME] IS NOT NULL");

                    b.ToTable("CONTRACT");
                });

            modelBuilder.Entity("VDemyanov.MaintenanceServices.Domain.Models.MainServiceEntities.ContractCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("DESCRIPTION");

                    b.Property<string>("Name")
                        .HasMaxLength(20)
                        .HasColumnType("nchar(20)")
                        .HasColumnName("NAME")
                        .IsFixedLength(true);

                    b.HasKey("Id");

                    b.HasIndex(new[] { "Description" }, "UQ__CONTRACT__4193D92E30ED3023")
                        .IsUnique()
                        .HasFilter("[DESCRIPTION] IS NOT NULL");

                    b.HasIndex(new[] { "Name" }, "UQ__CONTRACT__D9C1FA00534C47D2")
                        .IsUnique()
                        .HasFilter("[NAME] IS NOT NULL");

                    b.ToTable("CONTRACT_CATEGORY");
                });

            modelBuilder.Entity("VDemyanov.MaintenanceServices.Domain.Models.MainServiceEntities.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AvatarPath")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("AVATAR_PATH");

                    b.Property<DateTime?>("Bday")
                        .HasColumnType("date")
                        .HasColumnName("BDAY");

                    b.Property<string>("Login")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("LOGIN");

                    b.Property<string>("Name")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("NAME");

                    b.Property<string>("Password")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("PASSWORD");

                    b.Property<int?>("Position")
                        .HasColumnType("int")
                        .HasColumnName("POSITION");

                    b.HasKey("Id");

                    b.HasIndex("Position");

                    b.HasIndex(new[] { "Login" }, "UQ__EMPLOYEE__E39E2665A0764FBA")
                        .IsUnique()
                        .HasFilter("[LOGIN] IS NOT NULL");

                    b.ToTable("EMPLOYEE");
                });

            modelBuilder.Entity("VDemyanov.MaintenanceServices.Domain.Models.MainServiceEntities.Equipment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Category")
                        .HasColumnType("int")
                        .HasColumnName("CATEGORY");

                    b.Property<string>("Name")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("NAME");

                    b.HasKey("Id");

                    b.HasIndex("Category");

                    b.ToTable("EQUIPMENT");
                });

            modelBuilder.Entity("VDemyanov.MaintenanceServices.Domain.Models.MainServiceEntities.EquipmentCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("DESCRIPTION");

                    b.Property<string>("Name")
                        .HasMaxLength(20)
                        .HasColumnType("nchar(20)")
                        .HasColumnName("NAME")
                        .IsFixedLength(true);

                    b.HasKey("Id");

                    b.HasIndex(new[] { "Description" }, "UQ__EQUIPMEN__4193D92EE3C083BC")
                        .IsUnique()
                        .HasFilter("[DESCRIPTION] IS NOT NULL");

                    b.HasIndex(new[] { "Name" }, "UQ__EQUIPMEN__D9C1FA00A794AA4D")
                        .IsUnique()
                        .HasFilter("[NAME] IS NOT NULL");

                    b.ToTable("EQUIPMENT_CATEGORY");
                });

            modelBuilder.Entity("VDemyanov.MaintenanceServices.Domain.Models.MainServiceEntities.Position", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("NAME");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "Name" }, "UQ__POSITION__D9C1FA00E7775FB3")
                        .IsUnique()
                        .HasFilter("[NAME] IS NOT NULL");

                    b.ToTable("POSITION");
                });

            modelBuilder.Entity("VDemyanov.MaintenanceServices.Domain.Models.MainServiceEntities.PriceList", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreationDate")
                        .HasColumnType("date")
                        .HasColumnName("CREATION_DATE");

                    b.Property<string>("Description")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)")
                        .HasColumnName("DESCRIPTION");

                    b.HasKey("Id");

                    b.ToTable("PRICE_LIST");
                });

            modelBuilder.Entity("VDemyanov.MaintenanceServices.Domain.Models.MainServiceEntities.Report", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Contract")
                        .HasColumnType("int")
                        .HasColumnName("CONTRACT");

                    b.Property<double?>("Discount")
                        .HasColumnType("float")
                        .HasColumnName("DISCOUNT");

                    b.HasKey("Id");

                    b.HasIndex("Contract");

                    b.ToTable("REPORT");
                });

            modelBuilder.Entity("VDemyanov.MaintenanceServices.Domain.Models.MainServiceEntities.ReportData", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double?>("Number")
                        .HasColumnType("float")
                        .HasColumnName("NUMBER");

                    b.Property<int?>("Report")
                        .HasColumnType("int")
                        .HasColumnName("REPORT");

                    b.Property<int?>("ServiceEquipment")
                        .HasColumnType("int")
                        .HasColumnName("SERVICE_EQUIPMENT");

                    b.HasKey("Id");

                    b.HasIndex("Report");

                    b.HasIndex("ServiceEquipment");

                    b.ToTable("REPORT_DATA");
                });

            modelBuilder.Entity("VDemyanov.MaintenanceServices.Domain.Models.MainServiceEntities.Service", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("NAME");

                    b.Property<string>("Notation")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)")
                        .HasColumnName("NOTATION");

                    b.Property<decimal?>("Price")
                        .HasColumnType("money")
                        .HasColumnName("PRICE");

                    b.Property<int?>("PriceList")
                        .HasColumnType("int")
                        .HasColumnName("PRICE_LIST");

                    b.Property<string>("Unit")
                        .HasMaxLength(10)
                        .HasColumnType("nchar(10)")
                        .HasColumnName("UNIT")
                        .IsFixedLength(true);

                    b.HasKey("Id");

                    b.HasIndex("PriceList");

                    b.ToTable("SERVICE");
                });

            modelBuilder.Entity("VDemyanov.MaintenanceServices.Domain.Models.MainServiceEntities.ServiceEquipment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("EquipmentId")
                        .HasColumnType("int")
                        .HasColumnName("EQUIPMENT_ID");

                    b.Property<int?>("ServiceId")
                        .HasColumnType("int")
                        .HasColumnName("SERVICE_ID");

                    b.HasKey("Id");

                    b.HasIndex("EquipmentId");

                    b.HasIndex("ServiceId");

                    b.ToTable("SERVICE_EQUIPMENT");
                });

            modelBuilder.Entity("VDemyanov.MaintenanceServices.Domain.Models.MainServiceEntities.Contract", b =>
                {
                    b.HasOne("VDemyanov.MaintenanceServices.Domain.Models.MainServiceEntities.ContractCategory", "CategoryNavigation")
                        .WithMany("Contracts")
                        .HasForeignKey("Category")
                        .HasConstraintName("CONTRACT_CATEGORY_FK");

                    b.Navigation("CategoryNavigation");
                });

            modelBuilder.Entity("VDemyanov.MaintenanceServices.Domain.Models.MainServiceEntities.Employee", b =>
                {
                    b.HasOne("VDemyanov.MaintenanceServices.Domain.Models.MainServiceEntities.Position", "PositionNavigation")
                        .WithMany("Employees")
                        .HasForeignKey("Position")
                        .HasConstraintName("POSITION_FK");

                    b.Navigation("PositionNavigation");
                });

            modelBuilder.Entity("VDemyanov.MaintenanceServices.Domain.Models.MainServiceEntities.Equipment", b =>
                {
                    b.HasOne("VDemyanov.MaintenanceServices.Domain.Models.MainServiceEntities.EquipmentCategory", "CategoryNavigation")
                        .WithMany("Equipment")
                        .HasForeignKey("Category")
                        .HasConstraintName("EQUIPMENT_CATEGORY_FK");

                    b.Navigation("CategoryNavigation");
                });

            modelBuilder.Entity("VDemyanov.MaintenanceServices.Domain.Models.MainServiceEntities.Report", b =>
                {
                    b.HasOne("VDemyanov.MaintenanceServices.Domain.Models.MainServiceEntities.Contract", "ContractNavigation")
                        .WithMany("Reports")
                        .HasForeignKey("Contract")
                        .HasConstraintName("CONTRACT_FK");

                    b.Navigation("ContractNavigation");
                });

            modelBuilder.Entity("VDemyanov.MaintenanceServices.Domain.Models.MainServiceEntities.ReportData", b =>
                {
                    b.HasOne("VDemyanov.MaintenanceServices.Domain.Models.MainServiceEntities.Report", "ReportNavigation")
                        .WithMany("ReportData")
                        .HasForeignKey("Report")
                        .HasConstraintName("REPORT_FK");

                    b.HasOne("VDemyanov.MaintenanceServices.Domain.Models.MainServiceEntities.ServiceEquipment", "ServiceEquipmentNavigation")
                        .WithMany("ReportData")
                        .HasForeignKey("ServiceEquipment")
                        .HasConstraintName("SERVICE_EQUIPMENT_FK");

                    b.Navigation("ReportNavigation");

                    b.Navigation("ServiceEquipmentNavigation");
                });

            modelBuilder.Entity("VDemyanov.MaintenanceServices.Domain.Models.MainServiceEntities.Service", b =>
                {
                    b.HasOne("VDemyanov.MaintenanceServices.Domain.Models.MainServiceEntities.PriceList", "PriceListNavigation")
                        .WithMany("Services")
                        .HasForeignKey("PriceList")
                        .HasConstraintName("PRICE_LIST_FK");

                    b.Navigation("PriceListNavigation");
                });

            modelBuilder.Entity("VDemyanov.MaintenanceServices.Domain.Models.MainServiceEntities.ServiceEquipment", b =>
                {
                    b.HasOne("VDemyanov.MaintenanceServices.Domain.Models.MainServiceEntities.Equipment", "Equipment")
                        .WithMany("ServiceEquipments")
                        .HasForeignKey("EquipmentId")
                        .HasConstraintName("EQUIPMENT_ID_FK");

                    b.HasOne("VDemyanov.MaintenanceServices.Domain.Models.MainServiceEntities.Service", "Service")
                        .WithMany("ServiceEquipments")
                        .HasForeignKey("ServiceId")
                        .HasConstraintName("SERVICE_ID_FK");

                    b.Navigation("Equipment");

                    b.Navigation("Service");
                });

            modelBuilder.Entity("VDemyanov.MaintenanceServices.Domain.Models.MainServiceEntities.Contract", b =>
                {
                    b.Navigation("Reports");
                });

            modelBuilder.Entity("VDemyanov.MaintenanceServices.Domain.Models.MainServiceEntities.ContractCategory", b =>
                {
                    b.Navigation("Contracts");
                });

            modelBuilder.Entity("VDemyanov.MaintenanceServices.Domain.Models.MainServiceEntities.Equipment", b =>
                {
                    b.Navigation("ServiceEquipments");
                });

            modelBuilder.Entity("VDemyanov.MaintenanceServices.Domain.Models.MainServiceEntities.EquipmentCategory", b =>
                {
                    b.Navigation("Equipment");
                });

            modelBuilder.Entity("VDemyanov.MaintenanceServices.Domain.Models.MainServiceEntities.Position", b =>
                {
                    b.Navigation("Employees");
                });

            modelBuilder.Entity("VDemyanov.MaintenanceServices.Domain.Models.MainServiceEntities.PriceList", b =>
                {
                    b.Navigation("Services");
                });

            modelBuilder.Entity("VDemyanov.MaintenanceServices.Domain.Models.MainServiceEntities.Report", b =>
                {
                    b.Navigation("ReportData");
                });

            modelBuilder.Entity("VDemyanov.MaintenanceServices.Domain.Models.MainServiceEntities.Service", b =>
                {
                    b.Navigation("ServiceEquipments");
                });

            modelBuilder.Entity("VDemyanov.MaintenanceServices.Domain.Models.MainServiceEntities.ServiceEquipment", b =>
                {
                    b.Navigation("ReportData");
                });
#pragma warning restore 612, 618
        }
    }
}
