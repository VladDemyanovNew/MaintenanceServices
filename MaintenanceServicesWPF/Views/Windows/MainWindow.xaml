<Window x:Class="VDemyanov.MaintenanceServices.MaintenanceServicesWPF.Views.Windows.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:VDemyanov.MaintenanceServices.MaintenanceServicesWPF.Views.Windows"
        xmlns:vm="clr-namespace:VDemyanov.MaintenanceServices.MaintenanceServicesWPF.ViewModels"
        xmlns:views="clr-namespace:VDemyanov.MaintenanceServices.MaintenanceServicesWPF.Views.UserControls" 
        xmlns:enums="clr-namespace:VDemyanov.MaintenanceServices.MaintenanceServicesWPF.Infrastructure.Enums" 
        xmlns:fa="http://schemas.fontawesome.io/icons/" 
        xmlns:Behaviors="http://schemas.microsoft.com/xaml/behaviors"
        mc:Ignorable="d"
        Height="720" Width="1080" WindowState="Maximized" WindowStartupLocation="CenterScreen">

    <Window.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="/Resources/Themes/MainWindowStyles.xaml" />

                <ResourceDictionary>
                    <DataTemplate DataType = "{x:Type vm:BusinessZoneViewModel}">
                        <views:BusinessZone/>
                    </DataTemplate>
                    <DataTemplate DataType = "{x:Type vm:DatabaseViewModel}">
                        <views:Database/>
                    </DataTemplate>
                </ResourceDictionary>
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </Window.Resources>

    <Grid>
        <Grid Background="white">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="{Binding ElementName=nav_pnl, Path=Width}"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>

            <!-- Main Content -->
            <Grid x:Name="main_content" Grid.Column="1">
                <Behaviors:Interaction.Triggers>
                    <Behaviors:EventTrigger EventName="PreviewMouseLeftButtonDown" SourceObject="{Binding ElementName=main_content}">
                        <Behaviors:InvokeCommandAction Command="{Binding MainContent_PreviewMouseLeftButtonDownCommand}" />
                    </Behaviors:EventTrigger>
                </Behaviors:Interaction.Triggers>
                <ContentControl Content = "{Binding CurrentViewModel}" />
            </Grid>

            <!-- Navigation Panel -->
            <Grid   x:Name="nav_pnl"
                    HorizontalAlignment="Left"
                    Width="65"
                    Background="#2E333A"
                    Grid.Column="0">

                <StackPanel x:Name="st_pnl">
                    <!-- Grid for the Menu Toggle Button -->
                    <Grid Height="90">
                        <!-- Toggle Button -->
                        <ToggleButton x:Name="humburger"
                                      Grid.Column="0"
                                      VerticalAlignment="Center"
                                      HorizontalAlignment="Left"
                                      Margin="18,-20,0,0"
                                      Height="30"
                                      Width="30"
                                      BorderThickness="0"
                                      Background="{x:Null}"
                                      Style="{StaticResource humburger_style}"
                                      Cursor="Hand"
                                      IsChecked="{Binding HumburgerIsChecked}">

                            <!-- Toggle Button: Checked, Unchecked, MouseEnter, MouseLeave events -->
                            <ToggleButton.Triggers>

                                <EventTrigger RoutedEvent="ToggleButton.Unchecked">
                                    <BeginStoryboard>
                                        <Storyboard x:Name="HideStackPanel">
                                            <DoubleAnimation          
                                                Storyboard.TargetName="nav_pnl"
                                                Storyboard.TargetProperty="Width"
                                                BeginTime="0:0:0"
                                                From="230" To="65"
                                                Duration="0:0:0.2">
                                            </DoubleAnimation>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </EventTrigger>

                                <EventTrigger RoutedEvent="ToggleButton.Checked">
                                    <BeginStoryboard>
                                        <Storyboard x:Name="ShowStackPanel">
                                            <DoubleAnimation    
                                                Storyboard.TargetName="nav_pnl"
                                                Storyboard.TargetProperty="Width"
                                                BeginTime="0:0:0"
                                                From="65" To="230"
                                                Duration="0:0:0.3">
                                            </DoubleAnimation>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </EventTrigger>

                                <EventTrigger RoutedEvent="ToggleButton.MouseEnter">
                                    <BeginStoryboard>
                                        <Storyboard x:Name="MouseEnter_Humburger">
                                            <ColorAnimation
                                                Storyboard.TargetName="humburger_icon"
                                                Storyboard.TargetProperty="(fa:ImageAwesome.Foreground).(SolidColorBrush.Color)"
                                                To="#bf00ff" Duration="0:0:0.1"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </EventTrigger>

                                <EventTrigger RoutedEvent="ToggleButton.MouseLeave">
                                    <BeginStoryboard>
                                        <Storyboard x:Name="MouseLeave_Humburger">
                                            <ColorAnimation
                                                Storyboard.TargetName="humburger_icon"
                                                Storyboard.TargetProperty="(fa:ImageAwesome.Foreground).(SolidColorBrush.Color)"
                                                To="White" Duration="0:0:0.1"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </EventTrigger>
                            </ToggleButton.Triggers>

                            <fa:ImageAwesome x:Name="humburger_icon" Foreground="White" Icon="Bars"/>
                        </ToggleButton>
                    </Grid>

                    <!-- ListView with menu list items -->
                    <ListView  Background="Transparent"
                               BorderBrush="Transparent"
                               BorderThickness="0"
                               ScrollViewer.HorizontalScrollBarVisibility="Disabled">

                        <!-- Business zone -->
                        <ListViewItem x:Name="business_zone" HorizontalAlignment="Left" Margin="0,0,0,15" >
                            <Behaviors:Interaction.Triggers>
                                <Behaviors:EventTrigger EventName="Selected" SourceObject="{Binding ElementName=business_zone}">
                                    <Behaviors:InvokeCommandAction Command="{Binding NavCommand}" CommandParameter="{Binding Source={x:Static enums:ViewType.BUSINESS_ZONE}}" />
                                </Behaviors:EventTrigger>
                            </Behaviors:Interaction.Triggers>
                            <StackPanel Orientation="Horizontal" Width="230">
                                <fa:ImageAwesome Margin="12,0,0,0"  Height="30" Width="30" Foreground="White" Icon="Briefcase"/>
                                <TextBlock Text="Business zone" Margin="25,0,0,0" Style="{StaticResource font_style}"/>
                            </StackPanel>
                        </ListViewItem>

                        <!-- Database -->
                        <ListViewItem x:Name="database" HorizontalAlignment="Left" Margin="0,0,0,15">
                            <Behaviors:Interaction.Triggers>
                                <Behaviors:EventTrigger EventName="Selected" SourceObject="{Binding ElementName=database}">
                                    <Behaviors:InvokeCommandAction Command="{Binding NavCommand}" CommandParameter="{Binding Source={x:Static enums:ViewType.DATABASE}}" />
                                </Behaviors:EventTrigger>
                            </Behaviors:Interaction.Triggers>
                            <StackPanel Orientation="Horizontal" Width="230">
                                <fa:ImageAwesome Margin="12,0,0,0"  Height="30" Width="30" Foreground="White" Icon="Database"/>
                                <TextBlock Text="Database" Margin="25,0,0,0" Style="{StaticResource font_style}"/>
                            </StackPanel>
                        </ListViewItem>

                        <!-- Listview items style template -->
                        <ListView.ItemContainerStyle>
                            <Style TargetType="ListViewItem">
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type ListViewItem}">
                                            <Border x:Name="Bd"
                                                    Height="50"
                                                    BorderBrush="{TemplateBinding BorderBrush}"
                                                    BorderThickness="{TemplateBinding BorderThickness}"
                                                    Background="{TemplateBinding Background}"
                                                    Padding="{TemplateBinding Padding}"
                                                    SnapsToDevicePixels="True"
                                                    Cursor="Hand">
                                                <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                            </Border>

                                            <ControlTemplate.Triggers>
                                                <MultiTrigger>
                                                    <MultiTrigger.Conditions>
                                                        <Condition Property="IsMouseOver" Value="True"/>
                                                    </MultiTrigger.Conditions>
                                                    <Setter Property="Background" TargetName="Bd" Value="#404D5B"/>
                                                    <Setter Property="BorderBrush" TargetName="Bd" Value="#404D5B"/>
                                                </MultiTrigger>
                                            </ControlTemplate.Triggers>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </ListView.ItemContainerStyle>

                    </ListView>
                </StackPanel>
            </Grid>

        </Grid>

    </Grid>
</Window>
